case 0x00: /* BRK b */  /* ['b'] */   /* unhandled operation BRK b */   break;
case 0x01: /* ORA (d,X) */  /* ['a(d', 'X)'] */   /* unhandled operation ORA (d,X) */   break;
case 0x02: /* COP b */  /* ['b'] */   /* unhandled operation COP b */   break;
case 0x03: /* ORA d,S */  /* ['ad', 'S'] */   /* unhandled operation ORA d,S */   break;
case 0x04: /* TSB d */  /* [' ', 'd'] */   /* unhandled operation TSB d */   break;
case 0x05: /* ORA d */  /* ['ad'] */   /* unhandled operation ORA d */   break;
case 0x06: /* ASL d */  /* ['d'] */   /* unhandled operation ASL d */   break;
case 0x07: /* ORA [d] */  /* ['a[d]'] */   /* unhandled operation ORA [d] */   break;
case 0x08: /* PHP */  /* ['P'] */   /* unhandled operation PHP */   break;
case 0x09: /* ORA # */  /* ['a#'] */   /* unhandled operation ORA # */   break;
case 0x0a: /* ASL A */  /* ['A'] */   /* unhandled operation ASL A */   break;
case 0x0b: /* PHD */  /* ['D'] */   /* unhandled operation PHD */   break;
case 0x0c: /* TSB a */  /* [' ', 'a'] */   /* unhandled operation TSB a */   break;
case 0x0d: /* ORA a */  /* ['aa'] */   /* unhandled operation ORA a */   break;
case 0x0e: /* ASL a */  /* ['a'] */   /* unhandled operation ASL a */   break;
case 0x0f: /* ORA al */  /* ['aal'] */   /* unhandled operation ORA al */   break;
case 0x10: /* BPL r */  /* ['r'] */   /* unhandled operation BPL r */   break;
case 0x11: /* ORA (d),Y */  /* ['a(d)', 'Y'] */   /* unhandled operation ORA (d),Y */   break;
case 0x12: /* ORA (d) */  /* ['a(d)'] */   /* unhandled operation ORA (d) */   break;
case 0x13: /* ORA (d,S),Y */  /* ['a(d', 'S)', 'Y'] */   /* unhandled operation ORA (d,S),Y */   break;
case 0x14: /* TRB d */  /* [' ', 'd'] */   /* unhandled operation TRB d */   break;
case 0x15: /* ORA d,X */  /* ['ad', 'X'] */   /* unhandled operation ORA d,X */   break;
case 0x16: /* ASL d,X */  /* ['d', 'X'] */   /* unhandled operation ASL d,X */   break;
case 0x17: /* ORA [d],Y */  /* ['a[d]', 'Y'] */   /* unhandled operation ORA [d],Y */   break;
case 0x18: /* CLC */  /* ['CLC'] */   /* unhandled operation CLC */   break;
case 0x19: /* ORA a,Y */  /* ['aa', 'Y'] */   /* unhandled operation ORA a,Y */   break;
case 0x1a: /* INC A */  /* ['A', '1'] */   /* unhandled operation INC A */   break;
case 0x1b: /* TCS */  /* ['C', 'S'] */   /* unhandled operation TCS */   break;
case 0x1c: /* TRB a */  /* [' ', 'a'] */   /* unhandled operation TRB a */   break;
case 0x1d: /* ORA a,X */  /* ['aa', 'X'] */   /* unhandled operation ORA a,X */   break;
case 0x1e: /* ASL a,X */  /* ['a', 'X'] */   /* unhandled operation ASL a,X */   break;
case 0x1f: /* ORA al,X */  /* ['aal', 'X'] */   /* unhandled operation ORA al,X */   break;
case 0x20: /* JSR a */  /* ['a'] */   /* unhandled operation JSR a */   break;
case 0x21: /* AND (d,X) */  /* ['(d', 'X)'] */   /* unhandled operation AND (d,X) */   break;
case 0x22: /* JSL al */  /* ['al'] */   /* unhandled operation JSL al */   break;
case 0x23: /* AND d,S */  /* ['d', 'S'] */   /* unhandled operation AND d,S */   break;
case 0x24: /* BIT d */  /* ['d'] */   /* unhandled operation BIT d */   break;
case 0x25: /* AND d */  /* ['d'] */   /* unhandled operation AND d */   break;
case 0x26: /* ROL d */  /* ['d'] */   /* unhandled operation ROL d */   break;
case 0x27: /* AND [d] */  /* ['[d]'] */   /* unhandled operation AND [d] */   break;
case 0x28: /* PLP */  /* ['P'] */   /* unhandled operation PLP */   break;
case 0x29: /* AND # */  /* ['#'] */   /* unhandled operation AND # */   break;
case 0x2a: /* ROL A */  /* ['A'] */   /* unhandled operation ROL A */   break;
case 0x2b: /* PLD */  /* ['D'] */   /* unhandled operation PLD */   break;
case 0x2c: /* BIT a */  /* ['a'] */   /* unhandled operation BIT a */   break;
case 0x2d: /* AND a */  /* ['a'] */   /* unhandled operation AND a */   break;
case 0x2e: /* ROL a */  /* ['a'] */   /* unhandled operation ROL a */   break;
case 0x2f: /* AND al */  /* ['al'] */   /* unhandled operation AND al */   break;
case 0x30: /* BMI r */  /* ['r'] */   /* unhandled operation BMI r */   break;
case 0x31: /* AND (d),Y */  /* ['(d)', 'Y'] */   /* unhandled operation AND (d),Y */   break;
case 0x32: /* AND (d) */  /* ['(d)'] */   /* unhandled operation AND (d) */   break;
case 0x33: /* AND (d,S),Y */  /* ['(d', 'S)', 'Y'] */   /* unhandled operation AND (d,S),Y */   break;
case 0x34: /* BIT d,X */  /* ['d', 'X'] */   /* unhandled operation BIT d,X */   break;
case 0x35: /* AND d,X */  /* ['d', 'X'] */   /* unhandled operation AND d,X */   break;
case 0x36: /* ROL d,X */  /* ['d', 'X'] */   /* unhandled operation ROL d,X */   break;
case 0x37: /* AND [d],Y */  /* ['[d]', 'Y'] */   /* unhandled operation AND [d],Y */   break;
case 0x38: /* SEC */  /* ['SEC'] */   /* unhandled operation SEC */   break;
case 0x39: /* AND a,Y */  /* ['a', 'Y'] */   /* unhandled operation AND a,Y */   break;
case 0x3a: /* DEC A */  /* ['A', '1'] */   /* unhandled operation DEC A */   break;
case 0x3b: /* TSC */  /* ['S', 'C'] */   /* unhandled operation TSC */   break;
case 0x3c: /* BIT a,X */  /* ['a', 'X'] */   /* unhandled operation BIT a,X */   break;
case 0x3d: /* AND a,X */  /* ['a', 'X'] */   /* unhandled operation AND a,X */   break;
case 0x3e: /* ROL a,X */  /* ['a', 'X'] */   /* unhandled operation ROL a,X */   break;
case 0x3f: /* AND al,X */  /* ['al', 'X'] */   /* unhandled operation AND al,X */   break;
case 0x40: /* RTI */  /* ['RTI'] */   /* unhandled operation RTI */   break;
case 0x41: /* EOR (d,X) */  /* ['(d', 'X)'] */   /* unhandled operation EOR (d,X) */   break;
case 0x42: /* WDM */  /* ['WDM'] */   /* unhandled operation WDM */   break;
case 0x43: /* EOR d,S */  /* ['d', 'S'] */   /* unhandled operation EOR d,S */   break;
case 0x44: /* MVP s,d */  /* ['s', 'd'] */   /* unhandled operation MVP s,d */   break;
case 0x45: /* EOR d */  /* ['d'] */   /* unhandled operation EOR d */   break;
case 0x46: /* LSR d */  /* ['d'] */   /* unhandled operation LSR d */   break;
case 0x47: /* EOR [d] */  /* ['[d]'] */   /* unhandled operation EOR [d] */   break;
case 0x48: /* PHA */  /* ['A'] */   Push(pCpuReadVal, pCpuWriteVal, pCpuCtxtObjVal, pMemWriteVal, pMemCtxtObjVal, REG_A);   break;
case 0x49: /* EOR # */  /* ['#'] */   /* unhandled operation EOR # */   break;
case 0x4a: /* LSR A */  /* ['A'] */   /* unhandled operation LSR A */   break;
case 0x4b: /* PHK */  /* ['K'] */   /* unhandled operation PHK */   break;
case 0x4c: /* JMP a */  /* ['a'] */   /* unhandled operation JMP a */   break;
case 0x4d: /* EOR a */  /* ['a'] */   /* unhandled operation EOR a */   break;
case 0x4e: /* LSR a */  /* ['a'] */   /* unhandled operation LSR a */   break;
case 0x4f: /* EOR al */  /* ['al'] */   /* unhandled operation EOR al */   break;
case 0x50: /* BVC r */  /* ['r'] */   /* unhandled operation BVC r */   break;
case 0x51: /* EOR (d),Y */  /* ['(d)', 'Y'] */   /* unhandled operation EOR (d),Y */   break;
case 0x52: /* EOR (d) */  /* ['(d)'] */   /* unhandled operation EOR (d) */   break;
case 0x53: /* EOR (d,S),Y */  /* ['(d', 'S)', 'Y'] */   /* unhandled operation EOR (d,S),Y */   break;
case 0x54: /* MVN s,d */  /* ['s', 'd'] */   /* unhandled operation MVN s,d */   break;
case 0x55: /* EOR d,X */  /* ['d', 'X'] */   /* unhandled operation EOR d,X */   break;
case 0x56: /* LSR d,X */  /* ['d', 'X'] */   /* unhandled operation LSR d,X */   break;
case 0x57: /* EOR [d],Y */  /* ['[d]', 'Y'] */   /* unhandled operation EOR [d],Y */   break;
case 0x58: /* CLI */  /* ['CLI'] */   /* unhandled operation CLI */   break;
case 0x59: /* EOR a,Y */  /* ['a', 'Y'] */   /* unhandled operation EOR a,Y */   break;
case 0x5a: /* PHY */  /* ['Y'] */   Push(pCpuReadVal, pCpuWriteVal, pCpuCtxtObjVal, pMemWriteVal, pMemCtxtObjVal, REG_Y);   break;
case 0x5b: /* TCD */  /* ['C', 'D'] */   /* unhandled operation TCD */   break;
case 0x5c: /* JMP al */  /* ['al'] */   /* unhandled operation JMP al */   break;
case 0x5d: /* EOR a,X */  /* ['a', 'X'] */   /* unhandled operation EOR a,X */   break;
case 0x5e: /* LSR a,X */  /* ['a', 'X'] */   /* unhandled operation LSR a,X */   break;
case 0x5f: /* EOR al,X */  /* ['al', 'X'] */   /* unhandled operation EOR al,X */   break;
case 0x60: /* RTS */  /* ['RTS'] */   /* unhandled operation RTS */   break;
case 0x61: /* ADC (d,X) */  /* ['(d', 'X)'] */   /* unhandled operation ADC (d,X) */   break;
case 0x62: /* PER rl */  /* ['rl'] */   /* unhandled operation PER rl */   break;
case 0x63: /* ADC d,S */  /* ['d', 'S'] */   /* unhandled operation ADC d,S */   break;
case 0x64: /* STZ d */  /* ['zd'] */   /* unhandled operation STZ d */   break;
case 0x65: /* ADC d */  /* ['d'] */   /* unhandled operation ADC d */   break;
case 0x66: /* ROR d */  /* ['d'] */   /* unhandled operation ROR d */   break;
case 0x67: /* ADC [d] */  /* ['[d]'] */   /* unhandled operation ADC [d] */   break;
case 0x68: /* PLA */  /* ['A'] */   Pull(pCpuReadVal, pCpuWriteVal, pCpuCtxtObjVal, pMemReadVal, pMemCtxtObjVal, REG_A);   break;
case 0x69: /* ADC # */  /* ['#'] */   /* unhandled operation ADC # */   break;
case 0x6a: /* ROR A */  /* ['A'] */   /* unhandled operation ROR A */   break;
case 0x6b: /* RTL */  /* ['RTL'] */   /* unhandled operation RTL */   break;
case 0x6c: /* JMP (a) */  /* ['(a)'] */   /* unhandled operation JMP (a) */   break;
case 0x6d: /* ADC a */  /* ['a'] */   /* unhandled operation ADC a */   break;
case 0x6e: /* ROR a */  /* ['a'] */   /* unhandled operation ROR a */   break;
case 0x6f: /* ADC al */  /* ['al'] */   /* unhandled operation ADC al */   break;
case 0x70: /* BVS r */  /* ['r'] */   /* unhandled operation BVS r */   break;
case 0x71: /* ADC (d),Y */  /* ['(d)', 'Y'] */   /* unhandled operation ADC (d),Y */   break;
case 0x72: /* ADC (d) */  /* ['(d)'] */   /* unhandled operation ADC (d) */   break;
case 0x73: /* ADC (d,S),Y */  /* ['(d', 'S)', 'Y'] */   /* unhandled operation ADC (d,S),Y */   break;
case 0x74: /* STZ d,X */  /* ['zd', 'X'] */   /* unhandled operation STZ d,X */   break;
case 0x75: /* ADC d,X */  /* ['d', 'X'] */   /* unhandled operation ADC d,X */   break;
case 0x76: /* ROR d,X */  /* ['d', 'X'] */   /* unhandled operation ROR d,X */   break;
case 0x77: /* ADC [d],Y */  /* ['[d]', 'Y'] */   /* unhandled operation ADC [d],Y */   break;
case 0x78: /* SEI */  /* ['SEI'] */   /* unhandled operation SEI */   break;
case 0x79: /* ADC a,Y */  /* ['a', 'Y'] */   /* unhandled operation ADC a,Y */   break;
case 0x7a: /* PLY */  /* ['Y'] */   Pull(pCpuReadVal, pCpuWriteVal, pCpuCtxtObjVal, pMemReadVal, pMemCtxtObjVal, REG_Y);   break;
case 0x7b: /* TDC */  /* ['D', 'C'] */   /* unhandled operation TDC */   break;
case 0x7c: /* JMP (a,X) */  /* ['(a', 'X)'] */   /* unhandled operation JMP (a,X) */   break;
case 0x7d: /* ADC a,X */  /* ['a', 'X'] */   /* unhandled operation ADC a,X */   break;
case 0x7e: /* ROR a,X */  /* ['a', 'X'] */   /* unhandled operation ROR a,X */   break;
case 0x7f: /* ADC al,X */  /* ['al', 'X'] */   /* unhandled operation ADC al,X */   break;
case 0x80: /* BRA r */  /* ['r'] */   /* unhandled operation BRA r */   break;
case 0x81: /* STA (d,X) */  /* ['a(d', 'X)'] */   /* unhandled operation STA (d,X) */   break;
case 0x82: /* BRL rl */  /* ['rl'] */   /* unhandled operation BRL rl */   break;
case 0x83: /* STA d,S */  /* ['ad', 'S'] */   /* unhandled operation STA d,S */   break;
case 0x84: /* STY d */  /* ['yd'] */   /* unhandled operation STY d */   break;
case 0x85: /* STA d */  /* ['ad'] */   /* unhandled operation STA d */   break;
case 0x86: /* STX d */  /* ['xd'] */   /* unhandled operation STX d */   break;
case 0x87: /* STA [d] */  /* ['a[d]'] */   /* unhandled operation STA [d] */   break;
case 0x88: /* DEY */  /* ['Y', '1'] */   Sub(pCpuReadVal, pCpuWriteVal, pCpuCtxtObjVal, REG_Y, 1);   break;
case 0x89: /* BIT # */  /* ['#'] */   /* unhandled operation BIT # */   break;
case 0x8a: /* TXA */  /* ['X', 'A'] */   Transfer(pCpuReadVal, pCpuWriteVal, pCpuCtxtObjVal, REG_X, REG_A);   break;
case 0x8b: /* PHB */  /* ['B'] */   Push(pCpuReadVal, pCpuWriteVal, pCpuCtxtObjVal, pMemWriteVal, pMemCtxtObjVal, REG_B);   break;
case 0x8c: /* STY a */  /* ['ya'] */   /* unhandled operation STY a */   break;
case 0x8d: /* STA a */  /* ['aa'] */   /* unhandled operation STA a */   break;
case 0x8e: /* STX a */  /* ['xa'] */   /* unhandled operation STX a */   break;
case 0x8f: /* STA al */  /* ['aal'] */   /* unhandled operation STA al */   break;
case 0x90: /* BCC r */  /* ['r'] */   /* unhandled operation BCC r */   break;
case 0x91: /* STA (d),Y */  /* ['a(d)', 'Y'] */   /* unhandled operation STA (d),Y */   break;
case 0x92: /* STA (d) */  /* ['a(d)'] */   /* unhandled operation STA (d) */   break;
case 0x93: /* STA (d,S),Y */  /* ['a(d', 'S)', 'Y'] */   /* unhandled operation STA (d,S),Y */   break;
case 0x94: /* STY d,X */  /* ['yd', 'X'] */   /* unhandled operation STY d,X */   break;
case 0x95: /* STA d,X */  /* ['ad', 'X'] */   /* unhandled operation STA d,X */   break;
case 0x96: /* STX d,Y */  /* ['xd', 'Y'] */   /* unhandled operation STX d,Y */   break;
case 0x97: /* STA [d],Y */  /* ['a[d]', 'Y'] */   /* unhandled operation STA [d],Y */   break;
case 0x98: /* TYA */  /* ['Y', 'A'] */   Transfer(pCpuReadVal, pCpuWriteVal, pCpuCtxtObjVal, REG_Y, REG_A);   break;
case 0x99: /* STA a,Y */  /* ['aa', 'Y'] */   /* unhandled operation STA a,Y */   break;
case 0x9a: /* TXS */  /* ['X', 'S'] */   /* unhandled operation TXS */   break;
case 0x9b: /* TXY */  /* ['X', 'Y'] */   Transfer(pCpuReadVal, pCpuWriteVal, pCpuCtxtObjVal, REG_X, REG_Y);   break;
case 0x9c: /* STZ a */  /* ['za'] */   /* unhandled operation STZ a */   break;
case 0x9d: /* STA a,X */  /* ['aa', 'X'] */   /* unhandled operation STA a,X */   break;
case 0x9e: /* STZ a,X */  /* ['za', 'X'] */   /* unhandled operation STZ a,X */   break;
case 0x9f: /* STA al,X */  /* ['aal', 'X'] */   /* unhandled operation STA al,X */   break;
case 0xa0: /* LDY # */  /* ['y#'] */   /* unhandled operation LDY # */   break;
case 0xa1: /* LDA (d,X) */  /* ['a(d', 'X)'] */   /* unhandled operation LDA (d,X) */   break;
case 0xa2: /* LDX # */  /* ['x#'] */   /* unhandled operation LDX # */   break;
case 0xa3: /* LDA d,S */  /* ['ad', 'S'] */   /* unhandled operation LDA d,S */   break;
case 0xa4: /* LDY d */  /* ['yd'] */   /* unhandled operation LDY d */   break;
case 0xa5: /* LDA d */  /* ['ad'] */   /* unhandled operation LDA d */   break;
case 0xa6: /* LDX d */  /* ['xd'] */   /* unhandled operation LDX d */   break;
case 0xa7: /* LDA [d] */  /* ['a[d]'] */   /* unhandled operation LDA [d] */   break;
case 0xa8: /* TAY */  /* ['A', 'Y'] */   Transfer(pCpuReadVal, pCpuWriteVal, pCpuCtxtObjVal, REG_A, REG_Y);   break;
case 0xa9: /* LDA # */  /* ['a#'] */   /* unhandled operation LDA # */   break;
case 0xaa: /* TAX */  /* ['A', 'X'] */   Transfer(pCpuReadVal, pCpuWriteVal, pCpuCtxtObjVal, REG_A, REG_X);   break;
case 0xab: /* PLB */  /* ['B'] */   Pull(pCpuReadVal, pCpuWriteVal, pCpuCtxtObjVal, pMemReadVal, pMemCtxtObjVal, REG_B);   break;
case 0xac: /* LDY a */  /* ['ya'] */   /* unhandled operation LDY a */   break;
case 0xad: /* LDA a */  /* ['aa'] */   /* unhandled operation LDA a */   break;
case 0xae: /* LDX a */  /* ['xa'] */   /* unhandled operation LDX a */   break;
case 0xaf: /* LDA al */  /* ['aal'] */   /* unhandled operation LDA al */   break;
case 0xb0: /* BCS r */  /* ['r'] */   /* unhandled operation BCS r */   break;
case 0xb1: /* LDA (d),Y */  /* ['a(d)', 'Y'] */   /* unhandled operation LDA (d),Y */   break;
case 0xb2: /* LDA (d) */  /* ['a(d)'] */   /* unhandled operation LDA (d) */   break;
case 0xb3: /* LDA (d,S),Y */  /* ['a(d', 'S)', 'Y'] */   /* unhandled operation LDA (d,S),Y */   break;
case 0xb4: /* LDY d,X */  /* ['yd', 'X'] */   /* unhandled operation LDY d,X */   break;
case 0xb5: /* LDA d,X */  /* ['ad', 'X'] */   /* unhandled operation LDA d,X */   break;
case 0xb6: /* LDX d,Y */  /* ['xd', 'Y'] */   /* unhandled operation LDX d,Y */   break;
case 0xb7: /* LDA [d],Y */  /* ['a[d]', 'Y'] */   /* unhandled operation LDA [d],Y */   break;
case 0xb8: /* CLV */  /* ['CLV'] */   /* unhandled operation CLV */   break;
case 0xb9: /* LDA a,Y */  /* ['aa', 'Y'] */   /* unhandled operation LDA a,Y */   break;
case 0xba: /* TSX */  /* ['S', 'X'] */   /* unhandled operation TSX */   break;
case 0xbb: /* TYX */  /* ['Y', 'X'] */   Transfer(pCpuReadVal, pCpuWriteVal, pCpuCtxtObjVal, REG_Y, REG_X);   break;
case 0xbc: /* LDY a,X */  /* ['ya', 'X'] */   /* unhandled operation LDY a,X */   break;
case 0xbd: /* LDA a,X */  /* ['aa', 'X'] */   /* unhandled operation LDA a,X */   break;
case 0xbe: /* LDX a,Y */  /* ['xa', 'Y'] */   /* unhandled operation LDX a,Y */   break;
case 0xbf: /* LDA al,X */  /* ['aal', 'X'] */   /* unhandled operation LDA al,X */   break;
case 0xc0: /* CPY # */  /* ['#'] */   /* unhandled operation CPY # */   break;
case 0xc1: /* CMP (d,X) */  /* ['(d', 'X)'] */   /* unhandled operation CMP (d,X) */   break;
case 0xc2: /* REP # */  /* ['#'] */   /* unhandled operation REP # */   break;
case 0xc3: /* CMP d,S */  /* ['d', 'S'] */   /* unhandled operation CMP d,S */   break;
case 0xc4: /* CPY d */  /* ['d'] */   /* unhandled operation CPY d */   break;
case 0xc5: /* CMP d */  /* ['d'] */   /* unhandled operation CMP d */   break;
case 0xc6: /* DEC d */  /* ['d', '1'] */   /* unhandled operation DEC d */   break;
case 0xc7: /* CMP [d] */  /* ['[d]'] */   /* unhandled operation CMP [d] */   break;
case 0xc8: /* INY */  /* ['Y', '1'] */   Add(pCpuReadVal, pCpuWriteVal, pCpuCtxtObjVal, REG_Y, 1);   break;
case 0xc9: /* CMP # */  /* ['#'] */   /* unhandled operation CMP # */   break;
case 0xca: /* DEX */  /* ['X', '1'] */   Sub(pCpuReadVal, pCpuWriteVal, pCpuCtxtObjVal, REG_X, 1);   break;
case 0xcb: /* WAI */  /* ['WAI'] */   /* unhandled operation WAI */   break;
case 0xcc: /* CPY a */  /* ['a'] */   /* unhandled operation CPY a */   break;
case 0xcd: /* CMP a */  /* ['a'] */   /* unhandled operation CMP a */   break;
case 0xce: /* DEC a */  /* ['a', '1'] */   /* unhandled operation DEC a */   break;
case 0xcf: /* CMP al */  /* ['al'] */   /* unhandled operation CMP al */   break;
case 0xd0: /* BNE r */  /* ['r'] */   /* unhandled operation BNE r */   break;
case 0xd1: /* CMP (d),Y */  /* ['(d)', 'Y'] */   /* unhandled operation CMP (d),Y */   break;
case 0xd2: /* CMP (d) */  /* ['(d)'] */   /* unhandled operation CMP (d) */   break;
case 0xd3: /* CMP (d,S),Y */  /* ['(d', 'S)', 'Y'] */   /* unhandled operation CMP (d,S),Y */   break;
case 0xd4: /* PEI d */  /* ['d'] */   /* unhandled operation PEI d */   break;
case 0xd5: /* CMP d,X */  /* ['d', 'X'] */   /* unhandled operation CMP d,X */   break;
case 0xd6: /* DEC d,X */  /* ['d', 'X', '1'] */   /* unhandled operation DEC d,X */   break;
case 0xd7: /* CMP [d],Y */  /* ['[d]', 'Y'] */   /* unhandled operation CMP [d],Y */   break;
case 0xd8: /* CLD */  /* ['CLD'] */   /* unhandled operation CLD */   break;
case 0xd9: /* CMP a,Y */  /* ['a', 'Y'] */   /* unhandled operation CMP a,Y */   break;
case 0xda: /* PHX */  /* ['X'] */   Push(pCpuReadVal, pCpuWriteVal, pCpuCtxtObjVal, pMemWriteVal, pMemCtxtObjVal, REG_X);   break;
case 0xdb: /* STP */  /* ['tSTP'] */   /* unhandled operation STP */   break;
case 0xdc: /* JML (a) */  /* ['(a)'] */   /* unhandled operation JML (a) */   break;
case 0xdd: /* CMP a,X */  /* ['a', 'X'] */   /* unhandled operation CMP a,X */   break;
case 0xde: /* DEC a,X */  /* ['a', 'X', '1'] */   /* unhandled operation DEC a,X */   break;
case 0xdf: /* CMP al,X */  /* ['al', 'X'] */   /* unhandled operation CMP al,X */   break;
case 0xe0: /* CPX # */  /* ['#'] */   /* unhandled operation CPX # */   break;
case 0xe1: /* SBC (d,X) */  /* ['(d', 'X)'] */   /* unhandled operation SBC (d,X) */   break;
case 0xe2: /* SEP # */  /* ['#'] */   /* unhandled operation SEP # */   break;
case 0xe3: /* SBC d,S */  /* ['d', 'S'] */   /* unhandled operation SBC d,S */   break;
case 0xe4: /* CPX d */  /* ['d'] */   /* unhandled operation CPX d */   break;
case 0xe5: /* SBC d */  /* ['d'] */   /* unhandled operation SBC d */   break;
case 0xe6: /* INC d */  /* ['d', '1'] */   /* unhandled operation INC d */   break;
case 0xe7: /* SBC [d] */  /* ['[d]'] */   /* unhandled operation SBC [d] */   break;
case 0xe8: /* INX */  /* ['X', '1'] */   Add(pCpuReadVal, pCpuWriteVal, pCpuCtxtObjVal, REG_X, 1);   break;
case 0xe9: /* SBC # */  /* ['#'] */   /* unhandled operation SBC # */   break;
case 0xea: /* NOP */  /* ['NOP'] */   /* unhandled operation NOP */   break;
case 0xeb: /* XBA */  /* ['XBA'] */   /* unhandled operation XBA */   break;
case 0xec: /* CPX a */  /* ['a'] */   /* unhandled operation CPX a */   break;
case 0xed: /* SBC a */  /* ['a'] */   /* unhandled operation SBC a */   break;
case 0xee: /* INC a */  /* ['a', '1'] */   /* unhandled operation INC a */   break;
case 0xef: /* SBC al */  /* ['al'] */   /* unhandled operation SBC al */   break;
case 0xf0: /* BEQ r */  /* ['r'] */   /* unhandled operation BEQ r */   break;
case 0xf1: /* SBC (d),Y */  /* ['(d)', 'Y'] */   /* unhandled operation SBC (d),Y */   break;
case 0xf2: /* SBC (d) */  /* ['(d)'] */   /* unhandled operation SBC (d) */   break;
case 0xf3: /* SBC (d,S),Y */  /* ['(d', 'S)', 'Y'] */   /* unhandled operation SBC (d,S),Y */   break;
case 0xf4: /* PEA a */  /* ['a'] */   /* unhandled operation PEA a */   break;
case 0xf5: /* SBC d,X */  /* ['d', 'X'] */   /* unhandled operation SBC d,X */   break;
case 0xf6: /* INC d,X */  /* ['d', 'X', '1'] */   /* unhandled operation INC d,X */   break;
case 0xf7: /* SBC [d],Y */  /* ['[d]', 'Y'] */   /* unhandled operation SBC [d],Y */   break;
case 0xf8: /* SED */  /* ['SED'] */   /* unhandled operation SED */   break;
case 0xf9: /* SBC a,Y */  /* ['a', 'Y'] */   /* unhandled operation SBC a,Y */   break;
case 0xfa: /* PLX */  /* ['X'] */   Pull(pCpuReadVal, pCpuWriteVal, pCpuCtxtObjVal, pMemReadVal, pMemCtxtObjVal, REG_X);   break;
case 0xfb: /* XCE */  /* ['XCE'] */   /* unhandled operation XCE */   break;
case 0xfc: /* JSR (a,X) */  /* ['(a', 'X)'] */   /* unhandled operation JSR (a,X) */   break;
case 0xfd: /* SBC a,X */  /* ['a', 'X'] */   /* unhandled operation SBC a,X */   break;
case 0xfe: /* INC a,X */  /* ['a', 'X', '1'] */   /* unhandled operation INC a,X */   break;
case 0xff: /* SBC al,X */  /* ['al', 'X'] */   /* unhandled operation SBC al,X */   break;
